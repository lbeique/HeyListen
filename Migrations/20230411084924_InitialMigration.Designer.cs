// <auto-generated />
using System;
using HeyListen.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HeyListen.Migrations
{
    [DbContext(typeof(HeyListenDbContext))]
    [Migration("20230411084924_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HeyListen.Models.Channel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("AuthorId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsPrivate")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Channels");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            AuthorId = "cd061435-79a4-4484-be7a-88b3ea6ff827",
                            Description = "A high-energy EDM channel featuring the latest electronic dance music hits, remixes, and exclusive live sets from top DJs and producers around the world.",
                            IsPrivate = false,
                            Name = "ElectroVibes"
                        },
                        new
                        {
                            Id = "2",
                            AuthorId = "cd061435-79a4-4484-be7a-88b3ea6ff827",
                            Description = "A classic rock channel dedicated to the iconic bands and songs from the 60s, 70s, and 80s, featuring legends like Led Zeppelin, Pink Floyd, and The Rolling Stones.",
                            IsPrivate = false,
                            Name = "Rockin' Classics"
                        },
                        new
                        {
                            Id = "3",
                            AuthorId = "cd061435-79a4-4484-be7a-88b3ea6ff827",
                            Description = "A channel that celebrates the rich culture of hip-hop, featuring the latest releases, classic tracks, interviews with industry insiders, and exclusive content from up-and-coming artists.",
                            IsPrivate = false,
                            Name = "HipHopNation"
                        });
                });

            modelBuilder.Entity("HeyListen.Models.Message", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ChannelId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SenderId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ChannelId");

                    b.HasIndex("SenderId");

                    b.HasIndex("UserId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("HeyListen.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("CognitoUsername")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "cd061435-79a4-4484-be7a-88b3ea6ff827",
                            CognitoUsername = "chicken"
                        });
                });

            modelBuilder.Entity("HeyListen.Models.UserChannel", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("ChannelId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "ChannelId");

                    b.HasIndex("ChannelId");

                    b.ToTable("UserChannel");
                });

            modelBuilder.Entity("HeyListen.Models.Channel", b =>
                {
                    b.HasOne("HeyListen.Models.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("HeyListen.Models.Message", b =>
                {
                    b.HasOne("HeyListen.Models.Channel", "Channel")
                        .WithMany("Messages")
                        .HasForeignKey("ChannelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HeyListen.Models.User", "Sender")
                        .WithMany("Messages")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HeyListen.Models.User", null)
                        .WithMany("ReceivedMessages")
                        .HasForeignKey("UserId");

                    b.Navigation("Channel");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("HeyListen.Models.UserChannel", b =>
                {
                    b.HasOne("HeyListen.Models.Channel", "Channel")
                        .WithMany("UserChannels")
                        .HasForeignKey("ChannelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HeyListen.Models.User", "User")
                        .WithMany("UserChannels")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Channel");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HeyListen.Models.Channel", b =>
                {
                    b.Navigation("Messages");

                    b.Navigation("UserChannels");
                });

            modelBuilder.Entity("HeyListen.Models.User", b =>
                {
                    b.Navigation("Messages");

                    b.Navigation("ReceivedMessages");

                    b.Navigation("UserChannels");
                });
#pragma warning restore 612, 618
        }
    }
}
